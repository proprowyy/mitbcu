// generated by Fast Light User Interface Designer (fluid) version 1.0300

#include "TouchScreen_horizontal.h"

Fl_Double_Window *wd_touch_screen=(Fl_Double_Window *)0;

Fl_Wizard *wz_window_view=(Fl_Wizard *)0;

Fl_Group *gp_main_file=(Fl_Group *)0;

Fl_Button *btn_setting=(Fl_Button *)0;

static void cb_btn_setting(Fl_Button*, void*) {
  memset((void *)password_buffer,0,sizeof(password_buffer));

ShowPasswordMask(0);

btn_input_password_ok->deactivate();

gp_main_file->hide();
//gp_input_password->show();

gp_main_file_active_page = gp_input_password;
wz_window_view->value(gp_main_file_active_page);
}

Fl_Button *btn_main_file_back=(Fl_Button *)0;

static void cb_btn_main_file_back(Fl_Button*, void*) {
  gp_main_file->hide();
btn_main_file->color((Fl_Color)50);
btn_main_file->redraw();



ShowDeviceVolumeInfo(255);
wz_window_view->value(gp_static_show);
current_is_on_static_page = 1;
}

Fl_Group *gp_intercomm=(Fl_Group *)0;

Fl_Button *btn_d2p_request_1=(Fl_Button *)0;

static void cb_btn_d2p_request_1(Fl_Button*, void*) {
  if(is_intercomming_with_pcu == 0)
{
	(gp_intercomm->child(currend_d2P_position - 1))->color((Fl_Color)50);
	(gp_intercomm->child(currend_d2P_position - 1))->redraw();
	char buf[10];
	sprintf(buf,"%s",btn_d2p_request_1->label());
		
	unsigned char vn=0;	
	parse_btn_lable_value(buf,&d2p_reponse_sursor,&vn);	
	SetReceptPCUNo(d2p_reponse_sursor,vn);
	
	currend_d2P_position = 1;
	(gp_intercomm->child(currend_d2P_position - 1))->color((Fl_Color)94);
};
}

Fl_Button *btn_d2p_request_2=(Fl_Button *)0;

static void cb_btn_d2p_request_2(Fl_Button*, void*) {
  if(is_intercomming_with_pcu == 0)
{
	
	(gp_intercomm->child(currend_d2P_position - 1))->color((Fl_Color)50);
	(gp_intercomm->child(currend_d2P_position - 1))->redraw();

	char buf[10];
	sprintf(buf,"%s",btn_d2p_request_2->label());
	unsigned char vn=0;	
	parse_btn_lable_value(buf,&d2p_reponse_sursor,&vn);	
	SetReceptPCUNo(d2p_reponse_sursor,vn);
	currend_d2P_position = 2;
	(gp_intercomm->child(currend_d2P_position - 1))->color((Fl_Color)94);
};
}

Fl_Button *btn_d2p_request_3=(Fl_Button *)0;

static void cb_btn_d2p_request_3(Fl_Button*, void*) {
  if(is_intercomming_with_pcu == 0)
{
	(gp_intercomm->child(currend_d2P_position - 1))->color((Fl_Color)50);
	(gp_intercomm->child(currend_d2P_position - 1))->redraw();

	char buf[10];
	sprintf(buf,"%s",btn_d2p_request_3->label());
	unsigned char vn=0;	
	parse_btn_lable_value(buf,&d2p_reponse_sursor,&vn);	
	SetReceptPCUNo(d2p_reponse_sursor,vn);
	currend_d2P_position = 3;

	(gp_intercomm->child(currend_d2P_position - 1))->color((Fl_Color)94);
};
}

Fl_Button *btn_d2p_request_4=(Fl_Button *)0;

static void cb_btn_d2p_request_4(Fl_Button*, void*) {
  if(is_intercomming_with_pcu == 0)
{
	(gp_intercomm->child(currend_d2P_position - 1))->color((Fl_Color)50);
	(gp_intercomm->child(currend_d2P_position - 1))->redraw();


	char buf[10];
	sprintf(buf,"%s",btn_d2p_request_4->label());
	unsigned char vn=0;	
	parse_btn_lable_value(buf,&d2p_reponse_sursor,&vn);	
	SetReceptPCUNo(d2p_reponse_sursor,vn);
	currend_d2P_position = 4;

	(gp_intercomm->child(currend_d2P_position - 1))->color((Fl_Color)94);
};
}

Fl_Button *btn_d2p_request_5=(Fl_Button *)0;

static void cb_btn_d2p_request_5(Fl_Button*, void*) {
  if(is_intercomming_with_pcu == 0)
{
	(gp_intercomm->child(currend_d2P_position - 1))->color((Fl_Color)50);
	(gp_intercomm->child(currend_d2P_position - 1))->redraw();
 		char buf[10];
	sprintf(buf,"%s",btn_d2p_request_5->label());
	unsigned char vn=0;	
	parse_btn_lable_value(buf,&d2p_reponse_sursor,&vn);	
	SetReceptPCUNo(d2p_reponse_sursor,vn);
 	currend_d2P_position = 5;
 
	 (gp_intercomm->child(currend_d2P_position - 1))->color((Fl_Color)94);
};
}

Fl_Button *btn_d2p_request_6=(Fl_Button *)0;

static void cb_btn_d2p_request_6(Fl_Button*, void*) {
  if(is_intercomming_with_pcu == 0)
{
	(gp_intercomm->child(currend_d2P_position - 1))->color((Fl_Color)50);
	(gp_intercomm->child(currend_d2P_position - 1))->redraw();
		char buf[10];
	sprintf(buf,"%s",btn_d2p_request_6->label());
	unsigned char vn=0;	
	parse_btn_lable_value(buf,&d2p_reponse_sursor,&vn);	
	SetReceptPCUNo(d2p_reponse_sursor,vn);
	currend_d2P_position = 6;
	
	(gp_intercomm->child(currend_d2P_position - 1))->color((Fl_Color)94);
};
}

Fl_Button *btn_d2p_request_7=(Fl_Button *)0;

static void cb_btn_d2p_request_7(Fl_Button*, void*) {
  if(is_intercomming_with_pcu == 0)
{
	(gp_intercomm->child(currend_d2P_position - 1))->color((Fl_Color)50);
	(gp_intercomm->child(currend_d2P_position - 1))->redraw();
	char buf[10];
	sprintf(buf,"%s",btn_d2p_request_7->label());
	unsigned char vn=0;	
	parse_btn_lable_value(buf,&d2p_reponse_sursor,&vn);	
	SetReceptPCUNo(d2p_reponse_sursor,vn);
	currend_d2P_position = 7;

	(gp_intercomm->child(currend_d2P_position - 1))->color((Fl_Color)94);
};
}

Fl_Button *btn_d2p_request_8=(Fl_Button *)0;

static void cb_btn_d2p_request_8(Fl_Button*, void*) {
  if(is_intercomming_with_pcu == 0)
{
	(gp_intercomm->child(currend_d2P_position - 1))->color((Fl_Color)50);
	(gp_intercomm->child(currend_d2P_position - 1))->redraw();
		char buf[10];
	sprintf(buf,"%s",btn_d2p_request_8->label());
	unsigned char vn=0;	
	parse_btn_lable_value(buf,&d2p_reponse_sursor,&vn);	
	SetReceptPCUNo(d2p_reponse_sursor,vn);
	currend_d2P_position = 8;

	(gp_intercomm->child(currend_d2P_position - 1))->color((Fl_Color)94);
};
}

Fl_Button *btn_d2p_request_9=(Fl_Button *)0;

static void cb_btn_d2p_request_9(Fl_Button*, void*) {
  if(is_intercomming_with_pcu == 0)
{
	(gp_intercomm->child(currend_d2P_position - 1))->color((Fl_Color)50);
	(gp_intercomm->child(currend_d2P_position - 1))->redraw();
		char buf[10];
	sprintf(buf,"%s",btn_d2p_request_9->label());
	unsigned char vn=0;	
	parse_btn_lable_value(buf,&d2p_reponse_sursor,&vn);	
	SetReceptPCUNo(d2p_reponse_sursor,vn);
	currend_d2P_position = 9;

	(gp_intercomm->child(currend_d2P_position - 1))->color((Fl_Color)94);
};
}

Fl_Button *btn_d2p_request_10=(Fl_Button *)0;

static void cb_btn_d2p_request_10(Fl_Button*, void*) {
  if(is_intercomming_with_pcu == 0)
{
	(gp_intercomm->child(currend_d2P_position - 1))->color((Fl_Color)50);
	(gp_intercomm->child(currend_d2P_position - 1))->redraw();

	//SetReceptPCUNo(d2p_reponse_sursor + 9);
	currend_d2P_position = 10;

	(gp_intercomm->child(currend_d2P_position - 1))->color((Fl_Color)94);
};
}

Fl_Button *btn_d2p_request_11=(Fl_Button *)0;

static void cb_btn_d2p_request_11(Fl_Button*, void*) {
  if(is_intercomming_with_pcu == 0)
{
	(gp_intercomm->child(currend_d2P_position - 1))->color((Fl_Color)50);
	(gp_intercomm->child(currend_d2P_position - 1))->redraw();

	//SetReceptPCUNo(d2p_reponse_sursor + 10);
	currend_d2P_position = 11;

	(gp_intercomm->child(currend_d2P_position - 1))->color((Fl_Color)94);
};
}

Fl_Button *btn_d2p_request_12=(Fl_Button *)0;

static void cb_btn_d2p_request_12(Fl_Button*, void*) {
  if(is_intercomming_with_pcu == 0)
{
	(gp_intercomm->child(currend_d2P_position - 1))->color((Fl_Color)50);
	(gp_intercomm->child(currend_d2P_position - 1))->redraw();

	currend_d2P_position = 12;
//	SetReceptPCUNo(d2p_reponse_sursor + 11);
	
	(gp_intercomm->child(currend_d2P_position - 1))->color((Fl_Color)94);
};
}

Fl_Button *btn_intercomm_accept=(Fl_Button *)0;

static void cb_btn_intercomm_accept(Fl_Button*, void*) {
  RecvD2PRequest();
}

Fl_Button *btn_intercomm_refuse=(Fl_Button *)0;

static void cb_btn_intercomm_refuse(Fl_Button*, void*) {
  if(bcu_state.bcu_active_intercom_state->state_id == D2P_INTERCOMM_EVENT && is_intercomming_with_pcu == 1)
{
	CloseAudioSampleTimer();
}

iph_select_intercom->pkg_type=10;

BlockBufferWrite(bcu_state.comm_server_send_big_buffer_id,iph_select_intercom,sizeof(common_big_package_t));

cyg_thread_delay(100);

RefuseD2PRequest();
}

Fl_Button *btn_intercomm_back=(Fl_Button *)0;

static void cb_btn_intercomm_back(Fl_Button*, void*) {
  (gp_intercomm->child(currend_d2P_position - 1))->color((Fl_Color)50);
(gp_intercomm->child(currend_d2P_position - 1))->redraw();


if(is_intercomming_with_pcu == 1)
{
	is_intercomming_with_pcu  = 0;
	btn_intercomm->activate();
		btn_intercomm->color((Fl_Color)71);
	whether_intercomm_button_is_active = 0;
}

//ClearAllPCURequest();

d2p_reponse_sursor = 1;
currend_d2P_position = 1;


btn_intercomm->deactivate();
whether_intercomm_button_is_active = 0;
btn_intercomm->color((Fl_Color)50);
btn_intercomm->redraw();

btn_main_file->color((Fl_Color)71);
btn_main_file->redraw();

//btn_intercomm->deactivate();

//send PCU request cmd package

SetD2PCmd(1,0,255,0);//进入、运行、退出-响应类型-pcu_no-bcu_no

wz_window_view->value(gp_main_file);
}

Fl_Group *gp_static_show=(Fl_Group *)0;

Fl_Tile *title_static_volume_info=(Fl_Tile *)0;

Fl_Tile *title_tms_info_terminal_station=(Fl_Tile *)0;

Fl_Slider *slider_d2d_intercomm_volume=(Fl_Slider *)0;

Fl_Tile *title_static_d2d_intercomm_volume=(Fl_Tile *)0;

Fl_Group *gp_input_password=(Fl_Group *)0;

Fl_Button *btn_input_password_1=(Fl_Button *)0;

static void cb_btn_input_password_1(Fl_Button*, void*) {
  SetPassword(1,password_buffer);
ShowTitleOfInputPassword(INPUT_PASSWORD);
}

Fl_Button *btn_input_password_2=(Fl_Button *)0;

static void cb_btn_input_password_2(Fl_Button*, void*) {
  SetPassword(2,password_buffer);
ShowTitleOfInputPassword(INPUT_PASSWORD);
}

Fl_Button *btn_input_password_3=(Fl_Button *)0;

static void cb_btn_input_password_3(Fl_Button*, void*) {
  SetPassword(3,password_buffer);
ShowTitleOfInputPassword(INPUT_PASSWORD);
}

Fl_Button *btn_input_password_4=(Fl_Button *)0;

static void cb_btn_input_password_4(Fl_Button*, void*) {
  SetPassword(4,password_buffer);
ShowTitleOfInputPassword(INPUT_PASSWORD);
}

Fl_Button *btn_input_password_5=(Fl_Button *)0;

static void cb_btn_input_password_5(Fl_Button*, void*) {
  SetPassword(5,password_buffer);
ShowTitleOfInputPassword(INPUT_PASSWORD);
}

Fl_Button *btn_input_password_6=(Fl_Button *)0;

static void cb_btn_input_password_6(Fl_Button*, void*) {
  SetPassword(6,password_buffer);
ShowTitleOfInputPassword(INPUT_PASSWORD);
}

Fl_Button *btn_input_password_7=(Fl_Button *)0;

static void cb_btn_input_password_7(Fl_Button*, void*) {
  SetPassword(7,password_buffer);
ShowTitleOfInputPassword(INPUT_PASSWORD);
}

Fl_Button *btn_input_password_8=(Fl_Button *)0;

static void cb_btn_input_password_8(Fl_Button*, void*) {
  SetPassword(8,password_buffer);
ShowTitleOfInputPassword(INPUT_PASSWORD);
}

Fl_Button *btn_input_password_9=(Fl_Button *)0;

static void cb_btn_input_password_9(Fl_Button*, void*) {
  SetPassword(9,password_buffer);
ShowTitleOfInputPassword(INPUT_PASSWORD);
}

Fl_Button *btn_input_password_cancle=(Fl_Button *)0;

static void cb_btn_input_password_cancle(Fl_Button*, void*) {
  strcpy((char *)password_buffer,"");
ShowPasswordMask(0);
ShowTitleOfInputPassword(INPUT_PASSWORD);

btn_input_password_ok->deactivate();
}

Fl_Button *btn_input_password_0=(Fl_Button *)0;

static void cb_btn_input_password_0(Fl_Button*, void*) {
  SetPassword(0,password_buffer);
ShowTitleOfInputPassword(INPUT_PASSWORD);
}

Fl_Button *btn_input_password_ok=(Fl_Button *)0;

static void cb_btn_input_password_ok(Fl_Button*, void*) {
  if(strncmp((char *)bcu_state.device_volume.correct_password,(char *)password_buffer,6) == 0)
{
	gp_input_password->hide();
	gp_setting_items->show();
	gp_main_file_active_page = gp_setting_items;
	title_version_info->label((char *)bcu_state.pa_software_version.software_version);
}
else
{
	ShowTitleOfInputPassword(PASSWORD_ERROR);
	btn_input_password_ok->deactivate();
}
strcpy((char *)password_buffer,"");
ShowPasswordMask(0);
}

Fl_Tile *title_please_input_password=(Fl_Tile *)0;

Fl_Tile *tile_out_password=(Fl_Tile *)0;

Fl_Tile *title_warning_and_forget_password=(Fl_Tile *)0;

Fl_Button *btn_forget_password=(Fl_Button *)0;

static void cb_btn_forget_password(Fl_Button*, void*) {
  strcpy((char *)password_buffer,"");
ShowPasswordMask(0);

ShowTitleOfInputPassword(FORGET_PASSWORD);
}

Fl_Button *btn_input_password_back=(Fl_Button *)0;

static void cb_btn_input_password_back(Fl_Button*, void*) {
  gp_main_file_active_page = gp_main_file;
gp_input_password->hide();
gp_main_file->show();
}

Fl_Group *gp_setting=(Fl_Group *)0;

Fl_Tile *title_set_volume=(Fl_Tile *)0;

Fl_Button *btn_setting_back=(Fl_Button *)0;

static void cb_btn_setting_back(Fl_Button*, void*) {
  gp_setting->hide();
gp_main_file_active_page = gp_setting_items;
gp_main_file_active_page->show();
}

Fl_Tile *title_monitor_volume=(Fl_Tile *)0;

Fl_Tile *title_car_volume=(Fl_Tile *)0;

Fl_Tile *title_inercomm_volume=(Fl_Tile *)0;

Fl_Button *btn_open_or_close_monitor=(Fl_Button *)0;

static void cb_btn_open_or_close_monitor(Fl_Button*, void*) {
  if(strcmp((char *)btn_open_or_close_monitor->label(),"监听音源开") == 0)
{
	btn_open_or_close_monitor->label("监听音源关");
	
}
else
{
	btn_open_or_close_monitor->label("监听音源开");
	
};
}

Fl_Button *btn_setting_monitor_volume_sub=(Fl_Button *)0;

static void cb_btn_setting_monitor_volume_sub(Fl_Button*, void*) {
  #if 0
if(bcu_state.device_volume.monitor_volume >= 1)
{
	if(bcu_state.device_volume.monitor_volume == 100)
	{
		btn_setting_monitor_volume_inc->activate();	
	}
	bcu_state.device_volume.monitor_volume =  bcu_state.device_volume.monitor_volume - 1;
	sprintf((char *)monitor_volume_digit_2_string_buffer,"%d",bcu_state.device_volume.monitor_volume);
	title_setting_monitor_volume->label(monitor_volume_digit_2_string_buffer);
	if(bcu_state.device_volume.monitor_volume == 0)
	{
		btn_setting_monitor_volume_sub->deactivate();	
	}
}
#else

bcu_state.device_volume.monitor_volume =  bcu_state.device_volume.monitor_volume - 1;

if(bcu_state.device_volume.monitor_volume < 4)
{
	btn_setting_monitor_volume_inc->activate();	
}


ShowDeviceVolumeInfo(0);
if(bcu_state.device_volume.monitor_volume == 0)
{
	btn_setting_monitor_volume_sub->deactivate();	
}

SetDeviceVolumeCMDPackage(0,bcu_state.device_volume.monitor_volume);
#endif
}

Fl_Button *btn_setting_monitor_volume_inc=(Fl_Button *)0;

static void cb_btn_setting_monitor_volume_inc(Fl_Button*, void*) {
  #if 0
if(bcu_state.device_volume.monitor_volume <= 99)
{
	if(bcu_state.device_volume.monitor_volume == 0)
	{
		btn_setting_monitor_volume_sub->activate();	
	}
	bcu_state.device_volume.monitor_volume =  bcu_state.device_volume.monitor_volume + 1;
	sprintf((char *)monitor_volume_digit_2_string_buffer,"%d",bcu_state.device_volume.monitor_volume);
	title_setting_monitor_volume->label(monitor_volume_digit_2_string_buffer);
	if(bcu_state.device_volume.monitor_volume == 100)
	{
		btn_setting_monitor_volume_inc->deactivate();	
	}
	
}
#else
if(bcu_state.device_volume.monitor_volume == 0)
{
	btn_setting_monitor_volume_sub->activate();	
}
bcu_state.device_volume.monitor_volume =  bcu_state.device_volume.monitor_volume + 1;

ShowDeviceVolumeInfo(0);

if(bcu_state.device_volume.monitor_volume == 4)
{
	btn_setting_monitor_volume_inc->deactivate();	
}
	
SetDeviceVolumeCMDPackage(0,bcu_state.device_volume.monitor_volume);

#endif
}

Fl_Tile *title_setting_monitor_volume=(Fl_Tile *)0;

Fl_Tile *title_setting_car_volume=(Fl_Tile *)0;

Fl_Button *btn_setting_car_volume_sub=(Fl_Button *)0;

static void cb_btn_setting_car_volume_sub(Fl_Button*, void*) {
  #if 0
if(bcu_state.device_volume.car_volume >= 1)
{
	if(bcu_state.device_volume.car_volume == 100)
	{
		btn_setting_car_volume_inc->activate();	
	}
	bcu_state.device_volume.car_volume =  bcu_state.device_volume.car_volume - 1;
	sprintf((char *)car_volume_digit_2_string_buffer,"%d",bcu_state.device_volume.car_volume);
	title_setting_car_volume->label(car_volume_digit_2_string_buffer);
	
	if(bcu_state.device_volume.car_volume == 0)
	{
		btn_setting_car_volume_sub->deactivate();	
	}
}
#else
bcu_state.device_volume.car_volume =  bcu_state.device_volume.car_volume - 1;
if(bcu_state.device_volume.car_volume < 100)
{
	btn_setting_car_volume_inc->activate();	
}


ShowDeviceVolumeInfo(1);
	
if(bcu_state.device_volume.car_volume == 0)
{
	btn_setting_car_volume_sub->deactivate();	
}
SetDeviceVolumeCMDPackage(1,bcu_state.device_volume.car_volume);
#endif
}

Fl_Button *btn_setting_car_volume_inc=(Fl_Button *)0;

static void cb_btn_setting_car_volume_inc(Fl_Button*, void*) {
  #if 0
if(bcu_state.device_volume.car_volume <= 99)
{
	if(bcu_state.device_volume.car_volume == 0)
	{
		btn_setting_car_volume_sub->activate();	
	}
	bcu_state.device_volume.car_volume =  bcu_state.device_volume.car_volume + 1;
	sprintf((char *)car_volume_digit_2_string_buffer,"%d",bcu_state.device_volume.car_volume);
	title_setting_car_volume->label(car_volume_digit_2_string_buffer);
	if(bcu_state.device_volume.car_volume == 100)
	{
		btn_setting_car_volume_inc->deactivate();	
	}
}
#else
if(bcu_state.device_volume.car_volume == 0)
{
	btn_setting_car_volume_sub->activate();	
}
bcu_state.device_volume.car_volume =  bcu_state.device_volume.car_volume + 1;

ShowDeviceVolumeInfo(1);

if(bcu_state.device_volume.car_volume == 100)
{
	btn_setting_car_volume_inc->deactivate();	
}
SetDeviceVolumeCMDPackage(1,bcu_state.device_volume.car_volume);
#endif
}

Fl_Button *btn_setting_intercomm_volume_sub=(Fl_Button *)0;

static void cb_btn_setting_intercomm_volume_sub(Fl_Button*, void*) {
  #if 0
if(bcu_state.device_volume.intercomm_volume >= 1)
{
	if(bcu_state.device_volume.intercomm_volume == 100)
	{
		btn_setting_intercomm_volume_inc->activate();	
	}
	bcu_state.device_volume.intercomm_volume =  bcu_state.device_volume.intercomm_volume - 1;
	sprintf((char *)intercomm_volume_digit_2_string_buffer,"%d",bcu_state.device_volume.intercomm_volume);
	title_setting_intercomm_volume->label(intercomm_volume_digit_2_string_buffer);
	
	if(bcu_state.device_volume.intercomm_volume == 0)
	{
		btn_setting_intercomm_volume_sub->deactivate();	
	}
}
#else

bcu_state.device_volume.intercomm_volume =  bcu_state.device_volume.intercomm_volume - 1;
if(bcu_state.device_volume.intercomm_volume < 4)
{
	btn_setting_intercomm_volume_inc->activate();	
}


ShowDeviceVolumeInfo(2);


if(bcu_state.device_volume.intercomm_volume == 0)
{
	btn_setting_intercomm_volume_sub->deactivate();	
}
SetDeviceVolumeCMDPackage(2,bcu_state.device_volume.intercomm_volume);
#endif
}

Fl_Button *btn_setting_intercomm_volume_inc=(Fl_Button *)0;

static void cb_btn_setting_intercomm_volume_inc(Fl_Button*, void*) {
  #if 0
if(bcu_state.device_volume.intercomm_volume <= 99)
{
	if(bcu_state.device_volume.intercomm_volume == 0)
	{
		btn_setting_intercomm_volume_sub->activate();	
	}
	bcu_state.device_volume.intercomm_volume =  bcu_state.device_volume.intercomm_volume + 1;
	sprintf((char *)intercomm_volume_digit_2_string_buffer,"%d",bcu_state.device_volume.intercomm_volume);
	title_setting_intercomm_volume->label(intercomm_volume_digit_2_string_buffer);
	if(bcu_state.device_volume.intercomm_volume == 100)
	{
		btn_setting_intercomm_volume_inc->deactivate();	
	}
}
#else

if(bcu_state.device_volume.intercomm_volume == 0)
{
	btn_setting_intercomm_volume_sub->activate();	
}
bcu_state.device_volume.intercomm_volume =  bcu_state.device_volume.intercomm_volume + 1;

ShowDeviceVolumeInfo(2);

if(bcu_state.device_volume.intercomm_volume == 4)
{
	btn_setting_intercomm_volume_inc->deactivate();	
}
SetDeviceVolumeCMDPackage(2,bcu_state.device_volume.intercomm_volume);
#endif
}

Fl_Tile *title_setting_intercomm_volume=(Fl_Tile *)0;

Fl_Button *btn_setting_d2d_intercomm_volume_sub=(Fl_Button *)0;

static void cb_btn_setting_d2d_intercomm_volume_sub(Fl_Button*, void*) {
  bcu_state.device_volume.d2d_volume =  bcu_state.device_volume.d2d_volume - 1;
if(bcu_state.device_volume.d2d_volume < 4)
{
	btn_setting_d2d_intercomm_volume_inc->activate();	
}


ShowDeviceVolumeInfo(4);


if(bcu_state.device_volume.d2d_volume == 0)
{
	btn_setting_d2d_intercomm_volume_sub->deactivate();	
}
SetDeviceVolumeCMDPackage(4,bcu_state.device_volume.d2d_volume);
}

Fl_Tile *title_d2d_inercomm_volume=(Fl_Tile *)0;

Fl_Tile *title_setting_d2d_intercomm_volume=(Fl_Tile *)0;

Fl_Button *btn_setting_d2d_intercomm_volume_inc=(Fl_Button *)0;

static void cb_btn_setting_d2d_intercomm_volume_inc(Fl_Button*, void*) {
  if(bcu_state.device_volume.d2d_volume == 0)
{
	btn_setting_d2d_intercomm_volume_sub->activate();	
}
bcu_state.device_volume.d2d_volume =  bcu_state.device_volume.d2d_volume + 1;

ShowDeviceVolumeInfo(4);

if(bcu_state.device_volume.d2d_volume == 4)
{
	btn_setting_d2d_intercomm_volume_inc->deactivate();	
}
SetDeviceVolumeCMDPackage(4,bcu_state.device_volume.d2d_volume);
}

Fl_Group *gp_setting_items=(Fl_Group *)0;

Fl_Button *btn_volume_adjust=(Fl_Button *)0;

static void cb_btn_volume_adjust(Fl_Button*, void*) {
  gp_setting_items->hide();
gp_setting->show();
ShowDeviceVolumeInfo(255);
gp_main_file_active_page = gp_setting;
}

Fl_Button *btn_back_setting_items=(Fl_Button *)0;

static void cb_btn_back_setting_items(Fl_Button*, void*) {
  gp_main_file_active_page->hide();
gp_main_file_active_page = gp_main_file;
gp_main_file_active_page->show();
}

Fl_Tile *title_version_info=(Fl_Tile *)0;

Fl_Group *gp_window_black_screen=(Fl_Group *)0;

Fl_Group *controlpage=(Fl_Group *)0;

Fl_Button *pcu_1=(Fl_Button *)0;

static void cb_pcu_1(Fl_Button*, void*) {
  int i=0;
for(int i=0;i<8;i++){
	(controlpage->child(i))->deactivate();
}

	pcu_1->color((Fl_Color)2);	
	enter1->activate();
	btn_return->deactivate();	
	G_SetAndClearPakage(1,1,&g_MonPcuCmdPakage);
	SetMonitorBigPakage(1,gwCurrCarNo);
}

Fl_Button *pcu_2=(Fl_Button *)0;

static void cb_pcu_2(Fl_Button*, void*) {
  int i=0;
for(int i=0;i<8;i++){
	(controlpage->child(i))->deactivate();
}

	pcu_2->color((Fl_Color)2);	
	enter1->activate();
	btn_return->deactivate();	
	G_SetAndClearPakage(1,2,&g_MonPcuCmdPakage);
	SetMonitorBigPakage(2,gwCurrCarNo);
}

Fl_Button *pcu_3=(Fl_Button *)0;

static void cb_pcu_3(Fl_Button*, void*) {
  int i=0;
for(int i=0;i<8;i++){
	(controlpage->child(i))->deactivate();
}

	pcu_3->color((Fl_Color)2);	
	enter1->activate();
	btn_return->deactivate();	
	G_SetAndClearPakage(1,3,&g_MonPcuCmdPakage);
	SetMonitorBigPakage(3,gwCurrCarNo);
}

Fl_Button *pcu_4=(Fl_Button *)0;

static void cb_pcu_4(Fl_Button*, void*) {
  int i=0;
for(int i=0;i<8;i++){
	(controlpage->child(i))->deactivate();
}

	pcu_4->color((Fl_Color)2);	
	enter1->activate();
	btn_return->deactivate();	
	G_SetAndClearPakage(1,4,&g_MonPcuCmdPakage);
	SetMonitorBigPakage(4,gwCurrCarNo);
}

Fl_Button *pcu_5=(Fl_Button *)0;

static void cb_pcu_5(Fl_Button*, void*) {
  int i=0;
for(int i=0;i<8;i++){
	(controlpage->child(i))->deactivate();
}

	pcu_5->color((Fl_Color)2);	
	enter1->activate();
	btn_return->deactivate();	
	G_SetAndClearPakage(1,5,&g_MonPcuCmdPakage);
	SetMonitorBigPakage(5,gwCurrCarNo);
}

Fl_Button *pcu_6=(Fl_Button *)0;

static void cb_pcu_6(Fl_Button*, void*) {
  int i=0;
for(int i=0;i<8;i++){
	(controlpage->child(i))->deactivate();
}

	pcu_6->color((Fl_Color)2);	
	enter1->activate();
	btn_return->deactivate();	
	G_SetAndClearPakage(1,6,&g_MonPcuCmdPakage);
	SetMonitorBigPakage(6,gwCurrCarNo);
}

Fl_Button *pcu_7=(Fl_Button *)0;

static void cb_pcu_7(Fl_Button*, void*) {
  int i=0;
for(int i=0;i<8;i++){
	(controlpage->child(i))->deactivate();
}

	pcu_7->color((Fl_Color)2);	
	enter1->activate();
	btn_return->deactivate();	
	G_SetAndClearPakage(1,7,&g_MonPcuCmdPakage);
	SetMonitorBigPakage(7,gwCurrCarNo);
}

Fl_Button *pcu_8=(Fl_Button *)0;

static void cb_pcu_8(Fl_Button*, void*) {
  int i=0;
for(int i=0;i<8;i++){
	(controlpage->child(i))->deactivate();
}

	pcu_8->color((Fl_Color)2);	
	enter1->activate();
	btn_return->deactivate();	
	G_SetAndClearPakage(1,8,&g_MonPcuCmdPakage);
	SetMonitorBigPakage(8,gwCurrCarNo);
}

Fl_Return_Button *btn_return=(Fl_Return_Button *)0;

static void cb_btn_return(Fl_Return_Button*, void*) {
  gp_main_file_active_page=AnnOrMonitorSelect;
wz_window_view->value(gp_main_file_active_page);
//gp_main_file_active_page=gp_select_car_ann_page;
wz_select_window->activate();
bcu_state.iph_monitor_cur_page=0;
}

Fl_Tile *title=(Fl_Tile *)0;

Fl_Button *enter1=(Fl_Button *)0;

static void cb_enter1(Fl_Button*, void*) {
  MoniortStateMachineExchange(&bcu_state.bcu_active_intercom_state,D2P_MONITOR_EVENT_CALL,&g_MonPcuCmdPakage);
enter1->deactivate();
btn_return->deactivate();
}

Fl_Button *cancle_iph=(Fl_Button *)0;

static void cb_cancle_iph(Fl_Button*, void*) {
  int i;
for(i=0;i<8;i++)
{

   	(controlpage->child(i))->color((Fl_Color)50);
	(controlpage->child(i))->activate();
	(controlpage->child(i))->redraw();
	

}

G_SetAndClearPakage(0,1,&g_MonPcuCmdPakage);
MoniortStateMachineExchange(&bcu_state.bcu_active_intercom_state,D2P_MONITOR_EXIT_CALL,&g_MonPcuCmdPakage);
memset(&g_MonPcuCmdPakage,0,sizeof(send_infomation_t));
btn_return->activate();
}

Fl_Group *gp_select_car_ann_page=(Fl_Group *)0;

Fl_Button *btn_ann_t1=(Fl_Button *)0;

static void cb_btn_ann_t1(Fl_Button*, void*) {
  UpdateSelectCarInfo(1);
}

Fl_Button *btn_ann_t2=(Fl_Button *)0;

static void cb_btn_ann_t2(Fl_Button*, void*) {
  UpdateSelectCarInfo(2);
}

Fl_Button *btn_ann_t3=(Fl_Button *)0;

static void cb_btn_ann_t3(Fl_Button*, void*) {
  UpdateSelectCarInfo(3);
}

Fl_Button *btn_ann_t4=(Fl_Button *)0;

static void cb_btn_ann_t4(Fl_Button*, void*) {
  UpdateSelectCarInfo(4);
}

Fl_Button *btn_ann_t5=(Fl_Button *)0;

static void cb_btn_ann_t5(Fl_Button*, void*) {
  UpdateSelectCarInfo(5);
}

Fl_Button *btn_ann_t6=(Fl_Button *)0;

static void cb_btn_ann_t6(Fl_Button*, void*) {
  UpdateSelectCarInfo(6);
}

Fl_Button *btn_ann_t7=(Fl_Button *)0;

static void cb_btn_ann_t7(Fl_Button*, void*) {
  UpdateSelectCarInfo(7);
}

Fl_Button *btn_ann_t8=(Fl_Button *)0;

static void cb_btn_ann_t8(Fl_Button*, void*) {
  UpdateSelectCarInfo(8);
}

Fl_Button *btn_ann_t9=(Fl_Button *)0;

static void cb_btn_ann_t9(Fl_Button*, void*) {
  UpdateSelectCarInfo(9);
}

Fl_Button *btn_ann_t10=(Fl_Button *)0;

static void cb_btn_ann_t10(Fl_Button*, void*) {
  UpdateSelectCarInfo(10);
}

Fl_Button *btn_ann_t11=(Fl_Button *)0;

static void cb_btn_ann_t11(Fl_Button*, void*) {
  UpdateSelectCarInfo(11);
}

Fl_Button *next_page=(Fl_Button *)0;

static void cb_next_page(Fl_Button*, void*) {
  gp_main_file_active_page = AnnOrMonitorSelect;

wz_window_view->value(gp_main_file_active_page);
if(bcu_state.car_select_count_for_monitor==1)
{
	
	btn_monitor->activate();
	btn_enter->activate();
}
else{

	btn_monitor->deactivate();
	btn_enter->activate();


};
}

Fl_Return_Button *btn_return1=(Fl_Return_Button *)0;

static void cb_btn_return1(Fl_Return_Button*, void*) {
  gp_main_file_active_page=gp_static_show;
wz_window_view->value(gp_main_file_active_page);
RecovoryBtnState(4);///<恢复相关按钮;
}

Fl_Button *enter_select=(Fl_Button *)0;

static void cb_enter_select(Fl_Button*, void*) {
  int i ;int ret;
	int car_select_num = 0;
	common_big_package_t common_big_send_package;
	for(i = 0; i < 11; ++i)
	{
		if(bcu_state.car_select_flag[i] == 1)
		{
			common_big_send_package.common_big_data_u.car_select_flag[i] = 1;
			car_select_num += 1;
			printf("i %d car_select_num %d\n",i,car_select_num);
		}
	}

	if(car_select_num > 0)
	{
		next_page->activate();
		enter_select->deactivate();
		bcu_state.car_select_count_for_monitor=car_select_num;
		common_big_send_package.pkg_type=1;
		common_big_send_package.common_big_data_u.select_enable_flag=1;
		common_big_send_package.common_big_data_u.seat_id=bcu_state.bcu_info.devices_no;
		
		ret = BlockBufferWrite(bcu_state.comm_server_send_big_buffer_id,&common_big_send_package,sizeof(common_big_package_t));
		if (ret <0){
			diag_printf("BlockBufferWrite faill. \n");
			BlockBufferWrite(bcu_state.comm_server_send_big_buffer_id,&common_big_send_package,sizeof(common_big_package_t));

		}
		
	}
	else
	{
		return;
	}
	
	bcu_state.car_select_finish = 1;
}

Fl_Button *cancel_select=(Fl_Button *)0;

static void cb_cancel_select(Fl_Button*, void*) {
  int i ;int ret;
	int car_select_num = 0;
	common_big_package_t common_big_send_package;
	for(i = 0; i < 11; ++i)
	{
		if(bcu_state.car_select_flag[i] == 1)
		{
		diag_printf("debug cancel_select12\n");

			bcu_state.car_select_flag[i] = 0;
			common_big_send_package.common_big_data_u.car_select_flag[i] = 1;
			car_select_num += 1;
		}
	}

	if(car_select_num > 0)
	{
		for(i = 0; i < 11; i++)
		{
			(gp_select_car_ann_page->child(i))->color((Fl_Color)50);
			(gp_select_car_ann_page->child(i))->activate();
			bcu_state.car_occupy_state[i] = 0;
		}
		diag_printf("debug cancel_select \n");
		bcu_state.car_select_count_for_monitor=0;
		common_big_send_package.pkg_type=1;
		common_big_send_package.common_big_data_u.select_enable_flag=0;
		common_big_send_package.common_big_data_u.seat_id=bcu_state.bcu_info.devices_no;
		ret = BlockBufferWrite(bcu_state.comm_server_send_big_buffer_id,&common_big_send_package,sizeof(common_big_package_t));
		if (ret <0){
			diag_printf("BlockBufferWrite faill. \n");
			BlockBufferWrite(bcu_state.comm_server_send_big_buffer_id,&common_big_send_package,sizeof(common_big_package_t));

		}
	}
	
	bcu_state.car_select_finish = 0;
	next_page->deactivate();
}

Fl_Group *AnnOrMonitorSelect=(Fl_Group *)0;

Fl_Button *btn_enter=(Fl_Button *)0;

static void cb_btn_enter(Fl_Button*, void*) {
  static int flag;
int         i;
if(flag==0)
{	
	flag=1;
	btn_monitor->deactivate();
	ExchangeToLive();
	btn_enter->color((Fl_Color)2);
	lable_state->hide();
	lable_state->label("车地广播中....\n\n\n取消广播后,请取消选车.");
	lable_state->redraw();
	lable_state->show();
	btn_return0->deactivate();

	
}
else
{
	flag=0;

	ExitLive();
	if(bcu_state.car_select_count_for_monitor==1)
	{
		btn_monitor->activate();
	}
	lable_state->hide();	
	lable_state->label("提示:请规范操作,谢谢!");
	lable_state->redraw();	
	lable_state->show();
	btn_enter->hide();	
	btn_enter->color((Fl_Color)50);
	btn_enter->redraw();
	btn_enter->show();
	btn_return0->activate();
		
};
}

Fl_Button *btn_monitor=(Fl_Button *)0;

static void cb_btn_monitor(Fl_Button*, void*) {
  gp_main_file_active_page = controlpage;
wz_window_view->value(gp_main_file_active_page);
bcu_state.iph_monitor_cur_page=1;
}

Fl_Tile *lable_state=(Fl_Tile *)0;

Fl_Return_Button *btn_return0=(Fl_Return_Button *)0;

static void cb_btn_return0(Fl_Return_Button*, void*) {
  gp_main_file_active_page=gp_select_car_ann_page;
wz_window_view->value(gp_main_file_active_page);
wz_select_window->activate();
}

Fl_Group *D2D_intercom_page=(Fl_Group *)0;

Fl_Button *btn_d2d_1=(Fl_Button *)0;

static void cb_btn_d2d_1(Fl_Button*, void*) {
  char buf[10];
int vn,bcu_no;
sprintf(buf,"%s",btn_d2d_1->label());
parse_btn_lable_value_bcu(buf,&bcu_no,&vn);
SetD2dCmdPackage(vn, bcu_no,&bcu_send_infomation);
}

Fl_Button *btn_d2d_2=(Fl_Button *)0;

static void cb_btn_d2d_2(Fl_Button*, void*) {
  char buf[10];
int vn,bcu_no;
sprintf(buf,"%s",btn_d2d_2->label());
parse_btn_lable_value_bcu(buf,&bcu_no,&vn);
SetD2dCmdPackage(vn, bcu_no,&bcu_send_infomation);
}

Fl_Button *btn_d2d_3=(Fl_Button *)0;

static void cb_btn_d2d_3(Fl_Button*, void*) {
  char buf[10];
int vn,bcu_no;
sprintf(buf,"%s",btn_d2d_3->label());
parse_btn_lable_value_bcu(buf,&bcu_no,&vn);
SetD2dCmdPackage(vn, bcu_no,&bcu_send_infomation);
}

Fl_Button *btn_d2d_4=(Fl_Button *)0;

static void cb_btn_d2d_4(Fl_Button*, void*) {
  char buf[10];
int vn,bcu_no;
sprintf(buf,"%s",btn_d2d_4->label());
parse_btn_lable_value_bcu(buf,&bcu_no,&vn);
SetD2dCmdPackage(vn, bcu_no,&bcu_send_infomation);
}

Fl_Button *btn_d2d_5=(Fl_Button *)0;

static void cb_btn_d2d_5(Fl_Button*, void*) {
  char buf[10];
int vn,bcu_no;
sprintf(buf,"%s",btn_d2d_5->label());
parse_btn_lable_value_bcu(buf,&bcu_no,&vn);
SetD2dCmdPackage(vn, bcu_no,&bcu_send_infomation);
}

Fl_Button *btn_d2d_6=(Fl_Button *)0;

static void cb_btn_d2d_6(Fl_Button*, void*) {
  char buf[10];
int vn,bcu_no;
sprintf(buf,"%s",btn_d2d_6->label());
parse_btn_lable_value_bcu(buf,&bcu_no,&vn);
SetD2dCmdPackage(vn, bcu_no,&bcu_send_infomation);
}

Fl_Button *btn_d2d_7=(Fl_Button *)0;

static void cb_btn_d2d_7(Fl_Button*, void*) {
  char buf[10];
int vn,bcu_no;
sprintf(buf,"%s",btn_d2d_7->label());
parse_btn_lable_value_bcu(buf,&bcu_no,&vn);
SetD2dCmdPackage(vn, bcu_no,&bcu_send_infomation);
}

Fl_Button *btn_d2d_8=(Fl_Button *)0;

static void cb_btn_d2d_8(Fl_Button*, void*) {
  char buf[10];
int vn,bcu_no;
sprintf(buf,"%s",btn_d2d_2->label());
parse_btn_lable_value_bcu(buf,&bcu_no,&vn);
SetD2dCmdPackage(vn, bcu_no,&bcu_send_infomation);
}

Fl_Button *enter_d2d=(Fl_Button *)0;

Fl_Return_Button *return_D2D=(Fl_Return_Button *)0;

Fl_Button *canenl_d2d=(Fl_Button *)0;

static void cb_canenl_d2d(Fl_Button*, void*) {
  JudgeWhetherD2DHaveFinished();/*Judge whether have finish d2d*/;
}

Fl_Wizard *wz_select_window=(Fl_Wizard *)0;

Fl_Group *main_group=(Fl_Group *)0;

Fl_Button *btn_main_file=(Fl_Button *)0;

static void cb_btn_main_file(Fl_Button*, void*) {
  btn_main_file->color((Fl_Color)70);
btn_main_file->redraw();
gp_input_password->hide();

gp_main_file_active_page = gp_main_file;
wz_window_view->value(gp_main_file_active_page);

current_is_on_static_page = 0;
}

Fl_Button *btn_emerg_ann=(Fl_Button *)0;

static void cb_btn_emerg_ann(Fl_Button*, void*) {
  ChangeBtnState(3);
gp_main_file_active_page=D2D_intercom_page;
wz_window_view->value(gp_main_file_active_page);
}

Fl_Button *btn_live=(Fl_Button *)0;

static void cb_btn_live(Fl_Button*, void*) {
  if(bcu_state.iph_monitor_cur_page==1)
{
	return ;
}
gp_main_file_active_page=gp_select_car_ann_page;
wz_window_view->value(gp_main_file_active_page);
ChangeBtnState(4);
}

Fl_Button *btn_intercomm=(Fl_Button *)0;

static void cb_btn_intercomm(Fl_Button*, void*) {
  ShowD2Ppage();
}

Fl_Group *gp_select_black=(Fl_Group *)0;

int touch_screen_main() {
  { wd_touch_screen = new Fl_Double_Window(800, 480, "Touch Screen");
    wd_touch_screen->box(FL_BORDER_BOX);
    wd_touch_screen->color(FL_FOREGROUND_COLOR);
    wd_touch_screen->selection_color(FL_FOREGROUND_COLOR);
    { wz_window_view = new Fl_Wizard(-70, -124, 1290, 794);
      wz_window_view->box(FL_UP_BOX);
      wz_window_view->color((Fl_Color)246);
      { gp_main_file = new Fl_Group(0, -4, 800, 384);
        gp_main_file->color((Fl_Color)246);
        gp_main_file->hide();
        { btn_setting = new Fl_Button(15, 20, 140, 95, "\350\256\276\347\275\256");
          btn_setting->callback((Fl_Callback*)cb_btn_setting);
          btn_setting->align(Fl_Align(FL_ALIGN_WRAP));
        } // Fl_Button* btn_setting
        { btn_main_file_back = new Fl_Button(650, 270, 140, 95, "\350\277\224\345\233\236");
          btn_main_file_back->callback((Fl_Callback*)cb_btn_main_file_back);
        } // Fl_Button* btn_main_file_back
        gp_main_file->hide();
        gp_main_file->end();
        Fl_Group::current()->resizable(gp_main_file);
      } // Fl_Group* gp_main_file
      { gp_intercomm = new Fl_Group(0, 0, 800, 385);
        gp_intercomm->color((Fl_Color)246);
        gp_intercomm->align(Fl_Align(129));
        gp_intercomm->hide();
        { btn_d2p_request_1 = new Fl_Button(10, 13, 140, 95);
          btn_d2p_request_1->callback((Fl_Callback*)cb_btn_d2p_request_1);
        } // Fl_Button* btn_d2p_request_1
        { btn_d2p_request_2 = new Fl_Button(172, 13, 140, 95);
          btn_d2p_request_2->callback((Fl_Callback*)cb_btn_d2p_request_2);
        } // Fl_Button* btn_d2p_request_2
        { btn_d2p_request_3 = new Fl_Button(330, 13, 140, 95);
          btn_d2p_request_3->callback((Fl_Callback*)cb_btn_d2p_request_3);
        } // Fl_Button* btn_d2p_request_3
        { btn_d2p_request_4 = new Fl_Button(490, 13, 140, 95);
          btn_d2p_request_4->callback((Fl_Callback*)cb_btn_d2p_request_4);
        } // Fl_Button* btn_d2p_request_4
        { btn_d2p_request_5 = new Fl_Button(10, 120, 140, 95);
          btn_d2p_request_5->callback((Fl_Callback*)cb_btn_d2p_request_5);
        } // Fl_Button* btn_d2p_request_5
        { btn_d2p_request_6 = new Fl_Button(170, 120, 140, 95);
          btn_d2p_request_6->callback((Fl_Callback*)cb_btn_d2p_request_6);
        } // Fl_Button* btn_d2p_request_6
        { btn_d2p_request_7 = new Fl_Button(330, 120, 140, 95);
          btn_d2p_request_7->callback((Fl_Callback*)cb_btn_d2p_request_7);
        } // Fl_Button* btn_d2p_request_7
        { btn_d2p_request_8 = new Fl_Button(490, 120, 140, 95);
          btn_d2p_request_8->callback((Fl_Callback*)cb_btn_d2p_request_8);
        } // Fl_Button* btn_d2p_request_8
        { btn_d2p_request_9 = new Fl_Button(10, 230, 140, 95);
          btn_d2p_request_9->callback((Fl_Callback*)cb_btn_d2p_request_9);
        } // Fl_Button* btn_d2p_request_9
        { btn_d2p_request_10 = new Fl_Button(170, 230, 140, 95);
          btn_d2p_request_10->callback((Fl_Callback*)cb_btn_d2p_request_10);
        } // Fl_Button* btn_d2p_request_10
        { btn_d2p_request_11 = new Fl_Button(335, 230, 140, 95);
          btn_d2p_request_11->callback((Fl_Callback*)cb_btn_d2p_request_11);
        } // Fl_Button* btn_d2p_request_11
        { btn_d2p_request_12 = new Fl_Button(490, 230, 140, 95);
          btn_d2p_request_12->callback((Fl_Callback*)cb_btn_d2p_request_12);
        } // Fl_Button* btn_d2p_request_12
        { btn_intercomm_accept = new Fl_Button(660, 225, 135, 70, "\346\216\245\351\200\232");
          btn_intercomm_accept->callback((Fl_Callback*)cb_btn_intercomm_accept);
        } // Fl_Button* btn_intercomm_accept
        { btn_intercomm_refuse = new Fl_Button(660, 305, 135, 70, "\346\214\202\346\226\255");
          btn_intercomm_refuse->callback((Fl_Callback*)cb_btn_intercomm_refuse);
        } // Fl_Button* btn_intercomm_refuse
        { btn_intercomm_back = new Fl_Button(660, 305, 135, 70, "\344\270\200\351\224\256\346\270\205\351\231\244\350\257\267\346\261\202");
          btn_intercomm_back->callback((Fl_Callback*)cb_btn_intercomm_back);
          btn_intercomm_back->hide();
        } // Fl_Button* btn_intercomm_back
        gp_intercomm->hide();
        gp_intercomm->end();
      } // Fl_Group* gp_intercomm
      { gp_static_show = new Fl_Group(0, 0, 800, 384);
        gp_static_show->color((Fl_Color)246);
        gp_static_show->hide();
        { title_static_volume_info = new Fl_Tile(20, 94, 135, 41, "\346\234\254\346\234\272\351\237\263\351\207\217");
          title_static_volume_info->labelsize(25);
          title_static_volume_info->align(Fl_Align(FL_ALIGN_WRAP));
          title_static_volume_info->deactivate();
          title_static_volume_info->end();
        } // Fl_Tile* title_static_volume_info
        { title_tms_info_terminal_station = new Fl_Tile(685, 245, 105, 35);
          title_tms_info_terminal_station->align(Fl_Align(FL_ALIGN_WRAP|FL_ALIGN_INSIDE));
          title_tms_info_terminal_station->deactivate();
          title_tms_info_terminal_station->end();
        } // Fl_Tile* title_tms_info_terminal_station
        { Fl_Box* o = new Fl_Box(10, 10, 20, 20);
          o->box(FL_FLAT_BOX);
          o->color((Fl_Color)1);
          o->selection_color((Fl_Color)1);
          o->labelcolor((Fl_Color)1);
        } // Fl_Box* o
        { Fl_Box* o = new Fl_Box(10, 35, 20, 20);
          o->box(FL_FLAT_BOX);
          o->color((Fl_Color)1);
          o->selection_color((Fl_Color)1);
          o->labelcolor((Fl_Color)1);
        } // Fl_Box* o
        { Fl_Box* o = new Fl_Box(10, 60, 20, 20);
          o->box(FL_FLAT_BOX);
          o->color((Fl_Color)1);
          o->selection_color((Fl_Color)1);
          o->labelcolor((Fl_Color)1);
        } // Fl_Box* o
        { Fl_Box* o = new Fl_Box(35, 10, 20, 20);
          o->box(FL_FLAT_BOX);
          o->color((Fl_Color)1);
          o->selection_color((Fl_Color)1);
          o->labelcolor((Fl_Color)1);
        } // Fl_Box* o
        { Fl_Box* o = new Fl_Box(60, 10, 20, 20);
          o->box(FL_FLAT_BOX);
          o->color((Fl_Color)1);
          o->selection_color((Fl_Color)1);
          o->labelcolor((Fl_Color)1);
        } // Fl_Box* o
        { Fl_Box* o = new Fl_Box(60, 35, 20, 20);
          o->box(FL_FLAT_BOX);
          o->color((Fl_Color)1);
          o->selection_color((Fl_Color)1);
          o->labelcolor((Fl_Color)1);
        } // Fl_Box* o
        { Fl_Box* o = new Fl_Box(60, 60, 20, 20);
          o->box(FL_FLAT_BOX);
          o->color((Fl_Color)1);
          o->selection_color((Fl_Color)1);
          o->labelcolor((Fl_Color)1);
        } // Fl_Box* o
        { Fl_Box* o = new Fl_Box(35, 35, 20, 20);
          o->box(FL_FLAT_BOX);
          o->color((Fl_Color)1);
          o->selection_color((Fl_Color)17);
          o->labelcolor((Fl_Color)18);
        } // Fl_Box* o
        { Fl_Box* o = new Fl_Box(35, 59, 20, 20);
          o->box(FL_FLAT_BOX);
          o->color((Fl_Color)1);
          o->selection_color((Fl_Color)26);
          o->labelcolor((Fl_Color)55);
        } // Fl_Box* o
        { Fl_Box* o = new Fl_Box(36, 60, 18, 18);
          o->box(FL_FLAT_BOX);
          o->selection_color((Fl_Color)1);
          o->labelcolor((Fl_Color)1);
        } // Fl_Box* o
        { Fl_Box* o = new Fl_Box(36, 36, 18, 18);
          o->box(FL_FLAT_BOX);
          o->selection_color((Fl_Color)1);
          o->labelcolor((Fl_Color)1);
        } // Fl_Box* o
        { Fl_Tile* o = new Fl_Tile(80, 20, 65, 30, "MIT");
          o->labelsize(16);
          o->align(Fl_Align(448|FL_ALIGN_INSIDE));
          o->end();
        } // Fl_Tile* o
        { slider_d2d_intercomm_volume = new Fl_Slider(80, 139, 15, 156);
          slider_d2d_intercomm_volume->type(2);
          slider_d2d_intercomm_volume->box(FL_BORDER_BOX);
          slider_d2d_intercomm_volume->color(FL_BACKGROUND2_COLOR);
          slider_d2d_intercomm_volume->selection_color((Fl_Color)41);
          slider_d2d_intercomm_volume->maximum(100);
          slider_d2d_intercomm_volume->step(1);
          slider_d2d_intercomm_volume->deactivate();
        } // Fl_Slider* slider_d2d_intercomm_volume
        { title_static_d2d_intercomm_volume = new Fl_Tile(120, 305, 50, 35);
          title_static_d2d_intercomm_volume->align(Fl_Align(FL_ALIGN_WRAP|FL_ALIGN_INSIDE));
          title_static_d2d_intercomm_volume->deactivate();
          title_static_d2d_intercomm_volume->end();
        } // Fl_Tile* title_static_d2d_intercomm_volume
        { Fl_Tile* o = new Fl_Tile(85, 40, 65, 35, " \351\270\243\345\225\270\344\277\241\346\201\257");
          o->align(Fl_Align(192|FL_ALIGN_INSIDE));
          o->end();
        } // Fl_Tile* o
        { Fl_Tile* o = new Fl_Tile(125, 325, 40, 25);
          o->align(Fl_Align(FL_ALIGN_WRAP|FL_ALIGN_INSIDE));
          o->end();
        } // Fl_Tile* o
        gp_static_show->hide();
        gp_static_show->end();
      } // Fl_Group* gp_static_show
      { gp_input_password = new Fl_Group(0, 0, 800, 384);
        gp_input_password->color((Fl_Color)246);
        gp_input_password->hide();
        { btn_input_password_1 = new Fl_Button(12, 13, 135, 70, "1");
          btn_input_password_1->callback((Fl_Callback*)cb_btn_input_password_1);
        } // Fl_Button* btn_input_password_1
        { btn_input_password_2 = new Fl_Button(172, 13, 135, 70, "2");
          btn_input_password_2->callback((Fl_Callback*)cb_btn_input_password_2);
        } // Fl_Button* btn_input_password_2
        { btn_input_password_3 = new Fl_Button(332, 13, 135, 70, "3");
          btn_input_password_3->callback((Fl_Callback*)cb_btn_input_password_3);
        } // Fl_Button* btn_input_password_3
        { btn_input_password_4 = new Fl_Button(12, 109, 135, 70, "4");
          btn_input_password_4->callback((Fl_Callback*)cb_btn_input_password_4);
        } // Fl_Button* btn_input_password_4
        { btn_input_password_5 = new Fl_Button(172, 108, 135, 70, "5");
          btn_input_password_5->callback((Fl_Callback*)cb_btn_input_password_5);
        } // Fl_Button* btn_input_password_5
        { btn_input_password_6 = new Fl_Button(332, 109, 135, 70, "6");
          btn_input_password_6->callback((Fl_Callback*)cb_btn_input_password_6);
        } // Fl_Button* btn_input_password_6
        { btn_input_password_7 = new Fl_Button(12, 205, 135, 70, "7");
          btn_input_password_7->callback((Fl_Callback*)cb_btn_input_password_7);
        } // Fl_Button* btn_input_password_7
        { btn_input_password_8 = new Fl_Button(172, 205, 135, 70, "8");
          btn_input_password_8->callback((Fl_Callback*)cb_btn_input_password_8);
        } // Fl_Button* btn_input_password_8
        { btn_input_password_9 = new Fl_Button(332, 205, 135, 70, "9");
          btn_input_password_9->callback((Fl_Callback*)cb_btn_input_password_9);
        } // Fl_Button* btn_input_password_9
        { btn_input_password_cancle = new Fl_Button(12, 291, 135, 70, "\346\270\205\347\251\272");
          btn_input_password_cancle->callback((Fl_Callback*)cb_btn_input_password_cancle);
        } // Fl_Button* btn_input_password_cancle
        { btn_input_password_0 = new Fl_Button(172, 291, 135, 70, "0");
          btn_input_password_0->callback((Fl_Callback*)cb_btn_input_password_0);
        } // Fl_Button* btn_input_password_0
        { btn_input_password_ok = new Fl_Button(332, 291, 135, 70, "\347\241\256\345\256\232");
          btn_input_password_ok->callback((Fl_Callback*)cb_btn_input_password_ok);
        } // Fl_Button* btn_input_password_ok
        { title_please_input_password = new Fl_Tile(580, 29, 185, 64, "\350\257\267\350\276\223\345\205\245\345\257\206\347\240\201:");
          title_please_input_password->labelsize(24);
          title_please_input_password->labelcolor((Fl_Color)1);
          title_please_input_password->align(Fl_Align(192|FL_ALIGN_INSIDE));
          title_please_input_password->end();
        } // Fl_Tile* title_please_input_password
        { tile_out_password = new Fl_Tile(545, 118, 195, 35, "AAA");
          tile_out_password->labelsize(30);
          tile_out_password->labelcolor(FL_GRAY0);
          tile_out_password->align(Fl_Align(FL_ALIGN_CENTER|FL_ALIGN_INSIDE));
          tile_out_password->end();
        } // Fl_Tile* tile_out_password
        { title_warning_and_forget_password = new Fl_Tile(500, 185, 285, 75);
          title_warning_and_forget_password->labelsize(24);
          title_warning_and_forget_password->labelcolor((Fl_Color)1);
          title_warning_and_forget_password->align(Fl_Align(FL_ALIGN_CENTER|FL_ALIGN_INSIDE));
          title_warning_and_forget_password->end();
        } // Fl_Tile* title_warning_and_forget_password
        { btn_forget_password = new Fl_Button(492, 291, 135, 70, "\345\277\230\350\256\260\345\257\206\347\240\201");
          btn_forget_password->callback((Fl_Callback*)cb_btn_forget_password);
        } // Fl_Button* btn_forget_password
        { btn_input_password_back = new Fl_Button(652, 291, 135, 70, "\351\200\200\345\207\272");
          btn_input_password_back->callback((Fl_Callback*)cb_btn_input_password_back);
        } // Fl_Button* btn_input_password_back
        gp_input_password->hide();
        gp_input_password->end();
      } // Fl_Group* gp_input_password
      { gp_setting = new Fl_Group(0, 1, 800, 384);
        gp_setting->color((Fl_Color)246);
        gp_setting->hide();
        { title_set_volume = new Fl_Tile(10, 10, 95, 36, "\350\256\276\347\275\256\351\237\263\351\207\217");
          title_set_volume->align(Fl_Align(132|FL_ALIGN_INSIDE));
          title_set_volume->end();
        } // Fl_Tile* title_set_volume
        { btn_setting_back = new Fl_Button(650, 301, 135, 70, "\351\200\200\345\207\272");
          btn_setting_back->callback((Fl_Callback*)cb_btn_setting_back);
        } // Fl_Button* btn_setting_back
        { title_monitor_volume = new Fl_Tile(45, 39, 120, 37, "\347\233\221\345\220\254\351\237\263\351\207\217");
          title_monitor_volume->align(Fl_Align(FL_ALIGN_CENTER|FL_ALIGN_INSIDE));
          title_monitor_volume->end();
        } // Fl_Tile* title_monitor_volume
        { title_car_volume = new Fl_Tile(50, 136, 120, 34, "\345\256\242\345\256\244\351\237\263\351\207\217");
          title_car_volume->align(Fl_Align(FL_ALIGN_CENTER|FL_ALIGN_INSIDE));
          title_car_volume->end();
        } // Fl_Tile* title_car_volume
        { title_inercomm_volume = new Fl_Tile(43, 237, 124, 32, "\347\264\247\346\200\245\345\257\271\350\256\262\351\237\263\351\207\217");
          title_inercomm_volume->align(Fl_Align(FL_ALIGN_CENTER|FL_ALIGN_INSIDE));
          title_inercomm_volume->end();
        } // Fl_Tile* title_inercomm_volume
        { btn_open_or_close_monitor = new Fl_Button(485, 313, 135, 60, "\347\233\221\345\220\254\351\237\263\346\272\220\345\274\200");
          btn_open_or_close_monitor->callback((Fl_Callback*)cb_btn_open_or_close_monitor);
          btn_open_or_close_monitor->hide();
          btn_open_or_close_monitor->deactivate();
        } // Fl_Button* btn_open_or_close_monitor
        { btn_setting_monitor_volume_sub = new Fl_Button(172, 18, 135, 70, "@-->");
          btn_setting_monitor_volume_sub->callback((Fl_Callback*)cb_btn_setting_monitor_volume_sub);
        } // Fl_Button* btn_setting_monitor_volume_sub
        { btn_setting_monitor_volume_inc = new Fl_Button(492, 18, 135, 70, "@+");
          btn_setting_monitor_volume_inc->callback((Fl_Callback*)cb_btn_setting_monitor_volume_inc);
        } // Fl_Button* btn_setting_monitor_volume_inc
        { title_setting_monitor_volume = new Fl_Tile(370, 18, 80, 65);
          title_setting_monitor_volume->labelsize(30);
          title_setting_monitor_volume->align(Fl_Align(FL_ALIGN_CENTER|FL_ALIGN_INSIDE));
          bcu_state.device_volume.monitor_volume = 80;
          sprintf((char *)monitor_volume_digit_2_string_buffer,"%d",bcu_state.device_volume.monitor_volume);
          title_setting_monitor_volume->label(monitor_volume_digit_2_string_buffer);
          title_setting_monitor_volume->end();
        } // Fl_Tile* title_setting_monitor_volume
        { title_setting_car_volume = new Fl_Tile(370, 115, 80, 65);
          title_setting_car_volume->labelsize(30);
          title_setting_car_volume->align(Fl_Align(FL_ALIGN_CENTER|FL_ALIGN_INSIDE));
          bcu_state.device_volume.car_volume = 50;
          sprintf((char *)car_volume_digit_2_string_buffer,"%d",bcu_state.device_volume.car_volume);
          title_setting_car_volume->label(car_volume_digit_2_string_buffer);
          title_setting_car_volume->end();
        } // Fl_Tile* title_setting_car_volume
        { btn_setting_car_volume_sub = new Fl_Button(172, 115, 135, 70, "@-->");
          btn_setting_car_volume_sub->callback((Fl_Callback*)cb_btn_setting_car_volume_sub);
        } // Fl_Button* btn_setting_car_volume_sub
        { btn_setting_car_volume_inc = new Fl_Button(492, 115, 135, 70, "@+");
          btn_setting_car_volume_inc->callback((Fl_Callback*)cb_btn_setting_car_volume_inc);
        } // Fl_Button* btn_setting_car_volume_inc
        { btn_setting_intercomm_volume_sub = new Fl_Button(172, 214, 135, 70, "@-->");
          btn_setting_intercomm_volume_sub->callback((Fl_Callback*)cb_btn_setting_intercomm_volume_sub);
        } // Fl_Button* btn_setting_intercomm_volume_sub
        { btn_setting_intercomm_volume_inc = new Fl_Button(492, 214, 135, 70, "@+");
          btn_setting_intercomm_volume_inc->callback((Fl_Callback*)cb_btn_setting_intercomm_volume_inc);
        } // Fl_Button* btn_setting_intercomm_volume_inc
        { title_setting_intercomm_volume = new Fl_Tile(375, 214, 80, 65);
          title_setting_intercomm_volume->labelsize(30);
          title_setting_intercomm_volume->align(Fl_Align(FL_ALIGN_CENTER|FL_ALIGN_INSIDE));
          bcu_state.device_volume.intercomm_volume = 30;
          sprintf((char *)intercomm_volume_digit_2_string_buffer,"%d",bcu_state.device_volume.intercomm_volume);
          title_setting_intercomm_volume->label(intercomm_volume_digit_2_string_buffer);
          title_setting_intercomm_volume->end();
        } // Fl_Tile* title_setting_intercomm_volume
        { btn_setting_d2d_intercomm_volume_sub = new Fl_Button(172, 301, 135, 70, "@-->");
          btn_setting_d2d_intercomm_volume_sub->callback((Fl_Callback*)cb_btn_setting_d2d_intercomm_volume_sub);
        } // Fl_Button* btn_setting_d2d_intercomm_volume_sub
        { title_d2d_inercomm_volume = new Fl_Tile(47, 322, 115, 38, "\345\217\270\346\234\272\345\257\271\350\256\262\351\237\263\351\207\217");
          title_d2d_inercomm_volume->align(Fl_Align(FL_ALIGN_CENTER|FL_ALIGN_INSIDE));
          title_d2d_inercomm_volume->end();
        } // Fl_Tile* title_d2d_inercomm_volume
        { title_setting_d2d_intercomm_volume = new Fl_Tile(370, 301, 80, 65);
          title_setting_d2d_intercomm_volume->labelsize(30);
          title_setting_d2d_intercomm_volume->align(Fl_Align(FL_ALIGN_CENTER|FL_ALIGN_INSIDE));
          bcu_state.device_volume.intercomm_volume = 30;
          sprintf((char *)d2d_intercomm_volume_digit_2_string_buffer,"%d",bcu_state.device_volume.d2d_volume);
          title_setting_d2d_intercomm_volume->label(d2d_intercomm_volume_digit_2_string_buffer);
          title_setting_d2d_intercomm_volume->end();
        } // Fl_Tile* title_setting_d2d_intercomm_volume
        { btn_setting_d2d_intercomm_volume_inc = new Fl_Button(495, 301, 135, 70, "@+");
          btn_setting_d2d_intercomm_volume_inc->callback((Fl_Callback*)cb_btn_setting_d2d_intercomm_volume_inc);
        } // Fl_Button* btn_setting_d2d_intercomm_volume_inc
        gp_setting->hide();
        gp_setting->end();
      } // Fl_Group* gp_setting
      { gp_setting_items = new Fl_Group(0, 0, 800, 384);
        gp_setting_items->color((Fl_Color)246);
        gp_setting_items->hide();
        { btn_volume_adjust = new Fl_Button(25, 30, 140, 95, "\350\256\276\347\275\256\351\237\263\351\207\217");
          btn_volume_adjust->callback((Fl_Callback*)cb_btn_volume_adjust);
          btn_volume_adjust->align(Fl_Align(192|FL_ALIGN_INSIDE));
        } // Fl_Button* btn_volume_adjust
        { btn_back_setting_items = new Fl_Button(650, 280, 140, 95, "\350\277\224\345\233\236");
          btn_back_setting_items->callback((Fl_Callback*)cb_btn_back_setting_items);
          btn_back_setting_items->align(Fl_Align(192|FL_ALIGN_INSIDE));
        } // Fl_Button* btn_back_setting_items
        { title_version_info = new Fl_Tile(30, 345, 105, 25);
          title_version_info->align(Fl_Align(FL_ALIGN_CENTER|FL_ALIGN_INSIDE));
          title_version_info->end();
        } // Fl_Tile* title_version_info
        gp_setting_items->hide();
        gp_setting_items->end();
      } // Fl_Group* gp_setting_items
      { gp_window_black_screen = new Fl_Group(0, 0, 800, 384);
        gp_window_black_screen->color(FL_FOREGROUND_COLOR);
        gp_window_black_screen->hide();
        gp_window_black_screen->hide();
        gp_window_black_screen->end();
      } // Fl_Group* gp_window_black_screen
      { controlpage = new Fl_Group(0, -5, 805, 390);
        controlpage->color((Fl_Color)246);
        controlpage->hide();
        { pcu_1 = new Fl_Button(10, 50, 140, 95, "PCU-1");
          pcu_1->callback((Fl_Callback*)cb_pcu_1);
        } // Fl_Button* pcu_1
        { pcu_2 = new Fl_Button(170, 50, 140, 95, "PCU-2");
          pcu_2->callback((Fl_Callback*)cb_pcu_2);
        } // Fl_Button* pcu_2
        { pcu_3 = new Fl_Button(330, 50, 140, 95, "PCU-3");
          pcu_3->callback((Fl_Callback*)cb_pcu_3);
        } // Fl_Button* pcu_3
        { pcu_4 = new Fl_Button(490, 50, 140, 95, "PCU-4");
          pcu_4->callback((Fl_Callback*)cb_pcu_4);
        } // Fl_Button* pcu_4
        { pcu_5 = new Fl_Button(10, 165, 140, 95, "PCU-5");
          pcu_5->callback((Fl_Callback*)cb_pcu_5);
        } // Fl_Button* pcu_5
        { pcu_6 = new Fl_Button(170, 165, 140, 95, "PCU-6");
          pcu_6->callback((Fl_Callback*)cb_pcu_6);
        } // Fl_Button* pcu_6
        { pcu_7 = new Fl_Button(330, 165, 140, 95, "PCU-7");
          pcu_7->callback((Fl_Callback*)cb_pcu_7);
        } // Fl_Button* pcu_7
        { pcu_8 = new Fl_Button(490, 165, 140, 95, "PCU-8");
          pcu_8->callback((Fl_Callback*)cb_pcu_8);
        } // Fl_Button* pcu_8
        { btn_return = new Fl_Return_Button(645, 275, 140, 95, "\350\277\224\345\233\236");
          btn_return->callback((Fl_Callback*)cb_btn_return);
        } // Fl_Return_Button* btn_return
        { title = new Fl_Tile(10, 5, 515, 35, "\350\257\267\345\217\226\346\266\210\347\233\221\345\220\254\345\220\216,\
\350\277\224\345\233\236\344\270\212\344\270\200\351\241\265!");
          title->align(Fl_Align(FL_ALIGN_CENTER));
          title->end();
        } // Fl_Tile* title
        { enter1 = new Fl_Button(330, 275, 140, 95, "\347\241\256\350\256\244");
          enter1->selection_color((Fl_Color)2);
          enter1->callback((Fl_Callback*)cb_enter1);
        } // Fl_Button* enter1
        { cancle_iph = new Fl_Button(490, 275, 140, 95, "\345\217\226\346\266\210");
          cancle_iph->selection_color((Fl_Color)2);
          cancle_iph->callback((Fl_Callback*)cb_cancle_iph);
        } // Fl_Button* cancle_iph
        controlpage->hide();
        controlpage->end();
      } // Fl_Group* controlpage
      { gp_select_car_ann_page = new Fl_Group(0, -5, 850, 387);
        gp_select_car_ann_page->color((Fl_Color)246);
        gp_select_car_ann_page->hide();
        { btn_ann_t1 = new Fl_Button(10, 30, 140, 95, "ANN-T1");
          btn_ann_t1->callback((Fl_Callback*)cb_btn_ann_t1);
        } // Fl_Button* btn_ann_t1
        { btn_ann_t2 = new Fl_Button(170, 30, 140, 95, "ANN-T2");
          btn_ann_t2->callback((Fl_Callback*)cb_btn_ann_t2);
        } // Fl_Button* btn_ann_t2
        { btn_ann_t3 = new Fl_Button(330, 30, 140, 95, "ANN-T3");
          btn_ann_t3->callback((Fl_Callback*)cb_btn_ann_t3);
        } // Fl_Button* btn_ann_t3
        { btn_ann_t4 = new Fl_Button(490, 30, 140, 95, "ANN-T4");
          btn_ann_t4->callback((Fl_Callback*)cb_btn_ann_t4);
        } // Fl_Button* btn_ann_t4
        { btn_ann_t5 = new Fl_Button(650, 30, 140, 95, "ANN-T5");
          btn_ann_t5->callback((Fl_Callback*)cb_btn_ann_t5);
        } // Fl_Button* btn_ann_t5
        { btn_ann_t6 = new Fl_Button(10, 145, 140, 95, "ANN-T6");
          btn_ann_t6->callback((Fl_Callback*)cb_btn_ann_t6);
        } // Fl_Button* btn_ann_t6
        { btn_ann_t7 = new Fl_Button(170, 145, 140, 95, "ANN-T7");
          btn_ann_t7->callback((Fl_Callback*)cb_btn_ann_t7);
        } // Fl_Button* btn_ann_t7
        { btn_ann_t8 = new Fl_Button(330, 145, 140, 95, "ANN-T8");
          btn_ann_t8->callback((Fl_Callback*)cb_btn_ann_t8);
        } // Fl_Button* btn_ann_t8
        { btn_ann_t9 = new Fl_Button(490, 145, 140, 95, "ANN-T9");
          btn_ann_t9->callback((Fl_Callback*)cb_btn_ann_t9);
        } // Fl_Button* btn_ann_t9
        { btn_ann_t10 = new Fl_Button(650, 145, 140, 95, "ANN-T10");
          btn_ann_t10->callback((Fl_Callback*)cb_btn_ann_t10);
        } // Fl_Button* btn_ann_t10
        { btn_ann_t11 = new Fl_Button(10, 260, 140, 95, "ANN-T11");
          btn_ann_t11->callback((Fl_Callback*)cb_btn_ann_t11);
        } // Fl_Button* btn_ann_t11
        { next_page = new Fl_Button(490, 260, 140, 95, "\344\270\213\344\270\200\346\255\245");
          next_page->callback((Fl_Callback*)cb_next_page);
          next_page->deactivate();
        } // Fl_Button* next_page
        { btn_return1 = new Fl_Return_Button(650, 260, 140, 95, "\350\277\224\345\233\236");
          btn_return1->callback((Fl_Callback*)cb_btn_return1);
        } // Fl_Return_Button* btn_return1
        { enter_select = new Fl_Button(170, 260, 140, 95, "\347\241\256\350\256\244\351\200\211\350\275\246");
          enter_select->callback((Fl_Callback*)cb_enter_select);
          enter_select->deactivate();
        } // Fl_Button* enter_select
        { cancel_select = new Fl_Button(330, 260, 140, 95, "\345\217\226\346\266\210\351\200\211\350\275\246");
          cancel_select->callback((Fl_Callback*)cb_cancel_select);
          cancel_select->activate();
        } // Fl_Button* cancel_select
        gp_select_car_ann_page->hide();
        gp_select_car_ann_page->end();
      } // Fl_Group* gp_select_car_ann_page
      { AnnOrMonitorSelect = new Fl_Group(0, 0, 850, 388);
        AnnOrMonitorSelect->color((Fl_Color)246);
        AnnOrMonitorSelect->hide();
        { btn_enter = new Fl_Button(160, 125, 140, 95, "\345\271\277\346\222\255");
          btn_enter->selection_color((Fl_Color)2);
          btn_enter->callback((Fl_Callback*)cb_btn_enter);
          btn_enter->deactivate();btn_enter->color((Fl_Color)50);
        } // Fl_Button* btn_enter
        { btn_monitor = new Fl_Button(430, 125, 140, 95, "\347\233\221\345\220\254");
          btn_monitor->selection_color((Fl_Color)79);
          btn_monitor->callback((Fl_Callback*)cb_btn_monitor);
          btn_monitor->deactivate();
        } // Fl_Button* btn_monitor
        { lable_state = new Fl_Tile(265, 10, 210, 85, "\346\217\220\347\244\272:\350\257\267\350\247\204\350\214\203\346\223\215\
\344\275\234,\350\260\242\350\260\242!");
          lable_state->align(Fl_Align(FL_ALIGN_CENTER));
          lable_state->end();
        } // Fl_Tile* lable_state
        { btn_return0 = new Fl_Return_Button(650, 280, 140, 95, "\350\277\224\345\233\236");
          btn_return0->callback((Fl_Callback*)cb_btn_return0);
        } // Fl_Return_Button* btn_return0
        AnnOrMonitorSelect->hide();
        AnnOrMonitorSelect->end();
      } // Fl_Group* AnnOrMonitorSelect
      { D2D_intercom_page = new Fl_Group(0, 2, 850, 383);
        D2D_intercom_page->color((Fl_Color)246);
        { btn_d2d_1 = new Fl_Button(10, 12, 140, 95);
          btn_d2d_1->callback((Fl_Callback*)cb_btn_d2d_1);
          btn_d2d_1->hide();
        } // Fl_Button* btn_d2d_1
        { btn_d2d_2 = new Fl_Button(170, 12, 140, 95);
          btn_d2d_2->callback((Fl_Callback*)cb_btn_d2d_2);
          btn_d2d_2->hide();
        } // Fl_Button* btn_d2d_2
        { btn_d2d_3 = new Fl_Button(330, 12, 140, 95);
          btn_d2d_3->callback((Fl_Callback*)cb_btn_d2d_3);
          btn_d2d_3->hide();
        } // Fl_Button* btn_d2d_3
        { btn_d2d_4 = new Fl_Button(490, 12, 140, 95);
          btn_d2d_4->callback((Fl_Callback*)cb_btn_d2d_4);
          btn_d2d_4->hide();
        } // Fl_Button* btn_d2d_4
        { btn_d2d_5 = new Fl_Button(10, 125, 140, 95);
          btn_d2d_5->callback((Fl_Callback*)cb_btn_d2d_5);
          btn_d2d_5->hide();
        } // Fl_Button* btn_d2d_5
        { btn_d2d_6 = new Fl_Button(170, 125, 140, 95);
          btn_d2d_6->callback((Fl_Callback*)cb_btn_d2d_6);
          btn_d2d_6->hide();
        } // Fl_Button* btn_d2d_6
        { btn_d2d_7 = new Fl_Button(330, 125, 140, 95);
          btn_d2d_7->callback((Fl_Callback*)cb_btn_d2d_7);
          btn_d2d_7->hide();
        } // Fl_Button* btn_d2d_7
        { btn_d2d_8 = new Fl_Button(490, 125, 140, 95);
          btn_d2d_8->callback((Fl_Callback*)cb_btn_d2d_8);
          btn_d2d_8->hide();
        } // Fl_Button* btn_d2d_8
        { enter_d2d = new Fl_Button(335, 275, 140, 95);
        } // Fl_Button* enter_d2d
        { return_D2D = new Fl_Return_Button(650, 275, 140, 95, "\350\277\224\345\233\236");
        } // Fl_Return_Button* return_D2D
        { canenl_d2d = new Fl_Button(495, 275, 140, 95);
          canenl_d2d->callback((Fl_Callback*)cb_canenl_d2d);
        } // Fl_Button* canenl_d2d
        D2D_intercom_page->hide();
        D2D_intercom_page->end();
      } // Fl_Group* D2D_intercom_page
      wz_window_view->end();
    } // Fl_Wizard* wz_window_view
    { wz_select_window = new Fl_Wizard(0, 384, 800, 96);
      wz_select_window->box(FL_UP_BOX);
      { main_group = new Fl_Group(0, 384, 800, 96);
        main_group->color((Fl_Color)191);
        { btn_main_file = new Fl_Button(15, 396, 150, 70, "\344\270\273\350\217\234\345\215\225");
          btn_main_file->box(FL_ROUNDED_BOX);
          btn_main_file->down_box(FL_ROUNDED_BOX);
          btn_main_file->color(FL_LIGHT1);
          btn_main_file->callback((Fl_Callback*)cb_btn_main_file);
          btn_main_file->align(Fl_Align(FL_ALIGN_WRAP));
          btn_main_file->window()->hotspot(btn_main_file);
          wz_window_view->value(gp_static_show);
          gp_main_file_active_page = gp_main_file;
        } // Fl_Button* btn_main_file
        { btn_emerg_ann = new Fl_Button(225, 395, 150, 70, "\350\275\246\345\234\260\345\271\277\346\222\255");
          btn_emerg_ann->box(FL_ROUNDED_BOX);
          btn_emerg_ann->down_box(FL_ROUNDED_BOX);
          btn_emerg_ann->callback((Fl_Callback*)cb_btn_emerg_ann);
          btn_emerg_ann->align(Fl_Align(FL_ALIGN_WRAP));
        } // Fl_Button* btn_emerg_ann
        { btn_live = new Fl_Button(445, 395, 150, 70, "\351\200\211\350\275\246\347\225\214\351\235\242");
          btn_live->box(FL_ROUNDED_BOX);
          btn_live->down_box(FL_ROUNDED_BOX);
          btn_live->callback((Fl_Callback*)cb_btn_live);
          btn_live->align(Fl_Align(FL_ALIGN_WRAP));
          gp_main_file_active_page=gp_select_car_ann_page;
        } // Fl_Button* btn_live
        { btn_intercomm = new Fl_Button(645, 395, 150, 70, "\347\264\247\346\200\245\346\212\245\350\255\246");
          btn_intercomm->box(FL_ROUNDED_BOX);
          btn_intercomm->down_box(FL_ROUNDED_BOX);
          btn_intercomm->callback((Fl_Callback*)cb_btn_intercomm);
          btn_intercomm->align(Fl_Align(FL_ALIGN_WRAP));
          btn_intercomm->deactivate();
        } // Fl_Button* btn_intercomm
        main_group->end();
      } // Fl_Group* main_group
      { gp_select_black = new Fl_Group(0, 384, 800, 96);
        gp_select_black->color(FL_FOREGROUND_COLOR);
        gp_select_black->hide();
        gp_select_black->end();
      } // Fl_Group* gp_select_black
      //select_window->hide();
      wz_select_window->end();
    } // Fl_Wizard* wz_select_window
    wd_touch_screen->end();
    wd_touch_screen->resizable(wd_touch_screen);
  } // Fl_Double_Window* wd_touch_screen
  SystemInitBeforeRun();
    p_current_ann_group = gp_main_file;
    p_current_intercomm_group = gp_main_file;
    wz_select_window->value(main_group);
    //wz_window_view->value(gp_static_show);
    wd_touch_screen->show();
  #ifdef NEW_TS_STRATEGE
    while (Fl::wait())
    {
  	  if(switchFlag != 0)
  	  {
  			if(switchFlag == 1)//当前没有PCU请求
  			{
  				ShowNoPCURequest();
  				switchFlag = 0;
  			}
  			else if(switchFlag == 2)//设置紧急对讲按钮
  			{
  				SetD2PTipButtonState(1);
  				switchFlag = 0;
  			}
  			else if(switchFlag == 3)//恢复紧急对讲按钮
  			{
  				SetD2PTipButtonState(0);
  				switchFlag = 0;
  			}
  			else if(switchFlag == 4)//显示PCU请求
  			{
  				ShowD2PRequest();
  				switchFlag = 0;
  			}
  			else if(switchFlag == 5)//切换到PCU请求界面
  			{
  				ShowD2Ppage();
  				switchFlag = 0;
  			}
  			else if(switchFlag == 6)//本BCU D2P功能正常
  			{
  				EnableThisBCUD2PFunction();
  				switchFlag = 0;
  			}
  			else if(switchFlag == 7)//本BCU D2P功能失效
  			{
  				DisableThisBCUD2PFunction();
  				switchFlag = 0;
  			}
  			else if(switchFlag == 8)//BCU激活端控制
  			{
  				BCUActivejudge();
  				switchFlag = 0;
  			}
  			else if(switchFlag ==9)
  			{
  				ShowD2DRequest();
  				switchFlag=0;	
  			}
  			else if(switchFlag == 10)//更新音量显示界面信息
  			{
  				UpdateVolumeInfo(whether_want_to_update_page);
  				switchFlag = 0;
  			}
  			else if(switchFlag == 12)
  			{
  			
  				wz_select_window->value(main_group);
  				switchFlag=0;	
  			}	
  				
  			else  if(switchFlag == 13)//使能触摸屏
  			{
  				EnableTS();
  				switchFlag = 0;
  			}
  			else  if(switchFlag == 14)//失效触摸屏
  			{
  				DisableTS();
  				switchFlag = 0;
  			}
  			else  if(switchFlag == 16)//获取外部button按钮，并且进行相应界面切换
  			{
  				GetOuterButtonState();
  				switchFlag = 0;
  			}
  			else if(switchFlag == 17)//根据PC按键切换触摸屏界面-有触摸屏界面显示
  			{
  				JudegD2PButton();
  				switchFlag = 0;
  			}
  			
  			else if(switchFlag == 28)//根据优先级改变按钮先后顺序，并且调整线路号信息
  			{
  				ExchangeBtnPosition();
  				switchFlag = 0;
  			}
  			else if(switchFlag == 29)//无TCMS 下切换界面
  			{
  				ExchangeToLive();
  				switchFlag = 0;
  			}
  			else if(switchFlag == 30)//有TCMS下切换界面
  			{
  			//	ExchangeToLiveWithoutTS();
  				switchFlag = 0;
  			}
  			else if(switchFlag == 31)//修改D2P按钮颜色
  			{
  				ChangeIntercommLabelState(current_is_being_d2d);
  				switchFlag = 0;
  			}
  			else if(switchFlag == 33)//无TCMS 下切换界面
  			{
  				SyncSelectCarInfo();
  				switchFlag = 0;
  			}
  					
  		}
       }
  
  #else
      return Fl::run();
  #endif
}

void TouchScreenMain(int a, int b) {
  ts_buffer_id = a;
  ts_volume_id = b;
    touch_screen_main();
}
